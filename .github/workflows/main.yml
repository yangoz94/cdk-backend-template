name: CDK Pipeline

on:
  push:
    branches:
      - main
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  deploy_develop:
    name: deploy_develop
    if: github.ref == 'refs/heads/develop'
    environment: develop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install dependencies and build CDK app
        run: |
          export CI=true
          npm install -g aws-cdk
          npm ci
          npm run build
      - name: Synthesize and deploy CDK app
        run: |
          cdk synth
          cdk deploy --verbose --require-approval never
        env:
          APP_NAME: ${{ vars.APP_NAME}}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
  deploy_main:
    name: deploy_main
    if: github.ref == 'refs/heads/main'
    environment: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install dependencies and build CDK app
        run: |
          export CI=true
          npm install -g aws-cdk
          npm ci
          npm run build   
      - name: Synthesize and deploy CDK app
        run: |
          cdk synth
          cdk deploy --all --verbose --require-approval never
        env:
          APP_NAME: ${{ vars.APP_NAME}}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
          
